<Page
    x:Class="TennisPageControler.Pages.TennisRefereePage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Conv="clr-namespace:TennisPageControler.Converters"
    xmlns:System="clr-namespace:System;assembly=mscorlib"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
    xmlns:local="clr-namespace:TennisPageControler.Pages"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:models="clr-namespace:Models;assembly=Models"
    Background="Gray"
    mc:Ignorable="d">
    <Page.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Themes;component/ResourceDictionary/Generic.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <ObjectDataProvider
                x:Key="PointTypeodp"
                MethodName="GetValues"
                ObjectType="{x:Type System:Enum}">
                <ObjectDataProvider.MethodParameters>
                    <x:Type TypeName="models:PointTypeEnum" />
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>

            <Conv:BoolToVisibilityConverter x:Key="BoolToVisConv" />
            <Conv:InverseBoolToVisibilityConverter x:Key="InvBoolToVisConv" />

            <ObjectDataProvider
                x:Key="SetCountodp"
                MethodName="GetValues"
                ObjectType="{x:Type System:Enum}">
                <ObjectDataProvider.MethodParameters>
                    <x:Type TypeName="models:SetCountEnum" />
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>
        </ResourceDictionary>
    </Page.Resources>
    <!--  Referee grid  -->
    <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
        <Grid>
            <Grid
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            Visibility="{Binding MatchStarted, Converter={StaticResource InvBoolToVisConv}}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <TextBlock
                Grid.Row="0"
                Grid.Column="0"
                Margin="10"
                Style="{StaticResource StdTextBlockStyle}"
                Text="Select the number of sets to be played" />
                <ComboBox
                x:Name="SelectNumberOfSet"
                Grid.Row="0"
                Grid.Column="1"
                ItemsSource="{Binding Source={StaticResource SetCountodp}}"
                SelectedItem="{Binding SelectedSetCount}"
                Style="{StaticResource StdComboStyle}">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock x:Name="SetCount" />
                            <DataTemplate.Triggers>
                                <DataTrigger Binding="{Binding}" Value="{x:Static models:SetCountEnum.SC_Three}">
                                    <DataTrigger.Setters>
                                        <Setter TargetName="SetCount" Property="Text" Value="3" />
                                    </DataTrigger.Setters>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding}" Value="{x:Static models:SetCountEnum.SC_Five}">
                                    <DataTrigger.Setters>
                                        <Setter TargetName="SetCount" Property="Text" Value="5" />
                                    </DataTrigger.Setters>
                                </DataTrigger>
                            </DataTemplate.Triggers>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>

                <Button
                Grid.Row="1"
                Grid.Column="0"
                Grid.ColumnSpan="2"
                Margin="20"
                Command="{Binding MatchStartCommand}"
                Content="Start the match" />
            </Grid>

            <Grid
            x:Name="RefereePanel"
            Grid.Column="2"
            Margin="20"
            Background="Gray"
            Visibility="{Binding MatchStarted, Converter={StaticResource BoolToVisConv}}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <TextBlock
                    Grid.Row="0"
                    Grid.Column="0"
                    Grid.ColumnSpan="2"
                    HorizontalAlignment="Center"
                    Style="{StaticResource StdMainTextBlockStyle}"
                    Text="Referee Panel" />

                    <!--  Select player who is serving  -->
                    <TextBlock
                    Grid.Row="1"
                    Grid.Column="0"
                    Margin="10"
                    Style="{StaticResource StdTextBlockStyle}"
                    Text="Select the serving player" />
                    <ComboBox
                    x:Name="SelectedServePlayerComboBox"
                    Grid.Row="1"
                    Grid.Column="1"
                    Margin="10"
                    HorizontalAlignment="Left"
                    DisplayMemberPath="Name"
                    ItemsSource="{Binding Players}"
                    SelectedItem="{Binding SelectedServingPlayer}"
                    Style="{StaticResource StdComboStyle}">
                    </ComboBox>

                    <!--  Select type on point/ fault  -->
                    <TextBlock
                    Grid.Row="2"
                    Grid.Column="0"
                    Margin="10"
                    Style="{StaticResource StdTextBlockStyle}"
                    Text="Select the point type" />
                    <ComboBox
                    Grid.Row="2"
                    Grid.Column="1"
                    Margin="10"
                    HorizontalAlignment="Left"
                    ItemsSource="{Binding Source={StaticResource PointTypeodp}}"
                    SelectedItem="{Binding SelectedPointType}"
                    Style="{StaticResource StdComboStyle}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="SelectionChanged">
                                <i:InvokeCommandAction Command="{Binding PlayerPointTypeChangedCommand}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock x:Name="PointType" />
                                <DataTemplate.Triggers>
                                    <DataTrigger Binding="{Binding}" Value="{x:Static models:PointTypeEnum.PT_Ace}">
                                        <DataTrigger.Setters>
                                            <Setter TargetName="PointType" Property="Text" Value="Ace" />
                                        </DataTrigger.Setters>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding}" Value="{x:Static models:PointTypeEnum.PT_Point}">
                                        <DataTrigger.Setters>
                                            <Setter TargetName="PointType" Property="Text" Value="Point" />
                                        </DataTrigger.Setters>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding}" Value="{x:Static models:PointTypeEnum.PT_FaultOnServe}">
                                        <DataTrigger.Setters>
                                            <Setter TargetName="PointType" Property="Text" Value="Fault on serve" />
                                        </DataTrigger.Setters>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding}" Value="{x:Static models:PointTypeEnum.PT_Fault}">
                                        <DataTrigger.Setters>
                                            <Setter TargetName="PointType" Property="Text" Value="Fault" />
                                        </DataTrigger.Setters>
                                    </DataTrigger>
                                </DataTemplate.Triggers>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>

                    <!--  Button to push the result to spectators  -->
                    <Button
                    Grid.Row="3"
                    Grid.ColumnSpan="2"
                    Margin="10"
                    HorizontalAlignment="Center"
                    Command="{Binding PushToSpectorsCommand}"
                    Content="Push to Spectors" />

                </Grid>

            </Grid>
        </Grid>
    </ScrollViewer>
</Page>
